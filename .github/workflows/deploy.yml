name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: pnpm 설치 및 설정
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: 의존성 설치
        run: pnpm install --frozen-lockfile

      - name: 빌드
        run: pnpm build

      - name: AWS 자격 증명 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: EB CLI 설치
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli

      - name: EB 초기화 및 배포
        run: |
          eb init moving-app --region ap-northeast-2 --platform "Docker running on 64bit Amazon Linux 2023"
          eb use moving-app-env

          # 환경 변수 설정
          eb setenv \
            ENV="${{ secrets.ENV }}" \
            HASH_ROUNDS="${{ secrets.HASH_ROUNDS }}" \
            ACCESS_TOKEN_SECRET="${{ secrets.ACCESS_TOKEN_SECRET }}" \
            REFRESH_TOKEN_SECRET="${{ secrets.REFRESH_TOKEN_SECRET }}" \
            ACCESS_TOKEN_EXPIRATION_DEV="${{ secrets.ACCESS_TOKEN_EXPIRATION_DEV }}" \
            ACCESS_TOKEN_EXPIRATION_PROD="${{ secrets.ACCESS_TOKEN_EXPIRATION_PROD }}" \
            REFRESH_TOKEN_EXPIRATION_DEV="${{ secrets.REFRESH_TOKEN_EXPIRATION_DEV }}" \
            REFRESH_TOKEN_EXPIRATION_PROD="${{ secrets.REFRESH_TOKEN_EXPIRATION_PROD }}" \
            DB_TYPE="${{ secrets.DB_TYPE }}" \
            DB_HOST="${{ secrets.DB_HOST }}" \
            DB_PORT="${{ secrets.DB_PORT }}" \
            DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            DB_DATABASE="${{ secrets.DB_DATABASE }}" \
            DB_SYNCHRONIZE="${{ secrets.DB_SYNCHRONIZE }}" \
            AWS_S3_BUCKET="${{ secrets.AWS_S3_BUCKET }}" \
            NAVER_CLIENT_ID="${{ secrets.NAVER_CLIENT_ID }}" \
            NAVER_CLIENT_SECRET="${{ secrets.NAVER_CLIENT_SECRET }}" \
            SENTRY_DSN="${{ secrets.SENTRY_DSN }}" \
            SENTRY_ENV="${{ secrets.SENTRY_ENV }}" \
            SENTRY_SEND_PII="${{ secrets.SENTRY_SEND_PII }}" \
            DISCORD_WEBHOOK_URL="${{ secrets.DISCORD_WEBHOOK_URL }}"

          eb deploy
